image: "ruby:2.5.1"

cache:
  paths:
    - vendor/ruby

services:
  - postgres # :latest

variables:
  POSTGRES_DB: bp1step
  POSTGRES_USER: bp1step-user
  POSTGRES_PASSWORD: 'bp1step-password'

stages:
  - install
  - rubocop
  - test

install:
  stage: install
  script:
    - ruby -v                                   # Print out ruby version for debugging
    - apt-get update -q && apt-get install libpq-dev postgresql-client nodejs -yqq
    - cp config/database.yml{.example,}
    - cp config/ldap.yml{.example,}
    - bundle install --jobs=3 --without development production -j $(nproc) --path vendor  # Install dependencies into ./vendor/ruby
    - bundle exec rake db:create db:migrate RAILS_ENV=test
    - uname -a
    # check postgres
    - export PGPASSWORD=$POSTGRES_PASSWORD
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 'OK' AS status;"

rspec:
  stage: test
  script:
    - apt-get update -q && apt-get install nodejs -yqq
    - cp config/database.yml{.example,}
    - cp config/ldap.yml{.example,}
    - bundle install --jobs=3 --without development staging production -j $(nproc) --path vendor  # Install dependencies into ./vendor/ruby
    - bundle exec rake RAILS_ENV=test db:create
    - bundle exec rake RAILS_ENV=test db:migrate
    - bundle exec rspec --exclude-pattern "spec/features/*_spec.rb"
  
rubocop:
  stage: rubocop
  script:
    - gem install rubocop
    - rubocop -V
    # - rubocop app/models/
    - rubocop app/mailers
    # - rubocop -fo
  allow_failure: true
  
rails:
  stage: test
  script:
  - apt-get update -qq && apt-get install -yqq nodejs libpq-dev
  - cp config/database.yml{.example,}
  - cp config/ldap.yml{.example,}
  - gem install bundler --no-ri --no-rdoc    # Bundler is not installed with the image
  - bundle install -j $(nproc) --path vendor  # Install dependencies into ./vendor/ruby

  # change ldap-auth to database-auth 
  - sed -i 's/config.authentication_keys = \[ :username \]/config.authentication_keys = \[ :email \]/' config/initializers/devise.rb
  - sed -i 's/devise :ldap_authenticatable/devise :database_authenticatable/g' app/models/user.rb
  - sed -i 's/before_save :ldap_email/# before_save :ldap_email/g' app/models/user.rb

  - bundle exec rake RAILS_ENV=production db:create
  - bundle exec rake RAILS_ENV=production db:migrate
  - bundle exec rake RAILS_ENV=production db:seed
  only:
    - master
