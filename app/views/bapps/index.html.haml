-title "Каталог Приложений"
-search "Приложение"
%section.hero.is-primary
  .hero-body
    .container
      %h1.title
        -if @bp.nil?
          Каталог Приложений
          -if params[:search].present?
            [ #{params[:search]} ]
          -else
            -if params[:tag].present?
              %sup
                = params[:tag]
            -else
              -if params[:apptype].present?
                %sub
                  = params[:apptype]
        -else
          Приложения процесса
          = link_to @bp.name, bproce_path(@bp)
      %h2.subtitle
        Приложения и сервисы
        = link_to 'процессов', bproces_path
        %p.notice= notice
.container
  %table.table.is-striped.is-bordered.is-hoverable.is-fullwidth
    %thead
      %tr
        %th= sortable "name", "Наименование"
        %th= sortable "description", "Описание"
        -if !@bp.nil?
          %th Назначение в процессе
        -if can? :destroy, Bapp
          %th
        -if can? :manage, Bapp
          %th
      
      -if @bp.nil?
        -@bapps.each do |bapp|
          %tr
            %td= link_to bapp.name, bapp
            %td
              = bapp.description
              -if can? :manage_tag, bapp
                %sup= bapp.tag_list
            - if can? :manage, bapp
              %td= link_to image_tag('page_edit.gif', :alt => 'Изменить'), edit_bapp_path(bapp), class: 'button-img'
            -if can? :destroy, bapp
              %td= link_to image_tag('action_stop.gif', :alt => 'Удалить'), bapp, data: { confirm: bapp.name + "\nДействительно хотите удалить?" }, :method => 'delete', class: 'button-img'
      -else
        -@bproce_bapps.each do |ba|   # приложения процесса bp
          %tr
            -if ba.bapp
              %td= link_to ba.bapp.name, ba.bapp
              %td= ba.bapp.description
              %td= link_to ba.apurpose, edit_bproce_bapp_path(ba)
              - if can? :manage, ba.bapp
                %td= link_to image_tag('page_edit.gif', :alt => 'Изменить'), edit_bapp_path(ba.bapp), class: 'button-img'
              - if can? :destroy, ba.bapp
                %td= link_to image_tag('action_stop.gif', :alt => 'Удалить'), ba, data: { confirm: 'Приложение: ' + ba.bapp.name + "\nДействительно хотите исключить его из процесса?" }, :method => 'delete', class: 'button-img'
            -else
              %td{:colspan => 3}
                =ba.inspect

- unless params[:all].present?
  .apple_pagination
    -if @bp.nil?
      = will_paginate @bapps
    -else
      = will_paginate @bproce_bapps

-if @bp.nil?
  - if can? :destroy, Bapp
    %a.button.is-primary{ href: bapps_path + '.odt?all=1'} Каталог
  - if can? :manage, Bapp
    -if request.query_string
      %a.button.is-primary{ href: bapps_path + '.odt?' + request.query_string } Список
    -else
      %a.button.is-primary{ href: bapps_path + '.odt' } Список
    %a.button.is-primary{ href: new_bapp_path } Добавить новое приложение
-else
  - if can? :destroy, Bapp
    %a.button.is-primary{ href: new_bproce_bapp_path } Добавить новое приложение в процесс
.container
  .columns
    .column
      .buttons
        Тип:
        - Bapp.select("apptype, count(id) as count").group(:apptype).order(:apptype).each do |bapp|
          -if !bapp.apptype.to_s.empty?
            %a.button.is-outlined{ href: bapps_path + "?apptype=#{bapp.apptype}" } #{bapp.apptype}
    .column
      .buttons
        Теги:
        = raw Bapp.all_tags.map { |t| link_to t.name, tag_bapps_path(t.name), class: 'tags' }.join('&nbsp; ')
