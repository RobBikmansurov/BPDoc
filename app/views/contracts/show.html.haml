- title @contract.identify
- search 'Договор'
.id_{ onclick: "copyToClipboard('#{@contract.identify}')"} ##{@contract.id}

%h3
  = link_to @contract.contract_type.to_s, contracts_path + '?type=' + @contract.contract_type.to_s, class: 'groups'
  %b № #{@contract.number} "#{@contract.name}"
  #{@contract.dates}
%h3= link_to @contract.agent.fullname, agent_path(@contract.agent.id) if @contract.agent
- if @contract.parent
  %h3
    к
    = link_to @contract.parent.contract_type + ' ' + @contract.parent.shortname, contract_path(@contract.parent.id)
    = "от #{@contract.parent.date_begin.strftime('%d.%m.%Y')}" if @contract.parent.date_begin
    [#{@contract.parent.status}]

- if @subcontracts.count > 0
  %h3 Субдоговоры и приложения:
  - @subcontracts.each do |subcontract|
    = '——' * (subcontract.depth - @contract.depth)
    - if subcontract.contract_scan.count > 0 # если есть скан
      - if can? :view_contract, @contract
        - if File.exist?(subcontract.contract_scan.first.scan.path)
          = link_to image_tag('action_go.gif', alt: 'См.', title: 'Смотреть'), subcontract.contract_scan.first.scan.url, class: 'button-img'
      = subcontract.contract_scan.count
    = link_to subcontract.contract_type.to_s + ' ' + subcontract.shortname, contract_path(subcontract)
    = ' от ' + subcontract.date_begin.strftime('%d.%m.%Y') if subcontract.date_begin
    = subcontract.status
    %br

%h3
  Статус
  %b= @contract.status
%h3 О чем (краткое описание)
= simple_format(@contract.description, {}, {})

- unless @contract.note.blank?
  %h3 Примечание
  = raw add_link_from_id(@contract.note, 'contracts')
- unless @contract.condition.blank?
  %h3 Условие окончания/продления
  = @contract.condition
- unless @contract.check.blank?
  %h3 Контроль исполнения
  = @contract.check

%hr
%h3
  Ответственный за договор:
  = link_to @contract.owner_name, contracts_path(user: @contract.owner.id.to_s) if @contract.owner_id?
- if @contract.payer_id?
  %h3
    Ответственный за оплату договора:
    = link_to @contract.payer_name, contracts_path(payer: @contract.payer.id.to_s)

- if @contract.contract_place?
  %h3
    Место хранения оригинала:
    = link_to @contract.contract_place.to_s, contracts_path + '?place=' + @contract.contract_place.to_s, class: 'groups'

%p
- if BproceContract.where(contract_id: @contract.id).any? # есть ссылки из договора на процессы?
  %h3 Процесс:
  - @contract.bproce_contract.each do |bproce_contract|
    = link_to bproce_contract.bproce.name, bproce_path(bproce_contract.bproce)
    - if can? :update, Contract
      = link_to '( ' + bproce_contract.purpose.to_s + ' )', edit_bproce_contract_path(bproce_contract)
    - else
      ( #{bproce_contract.purpose} )

- else
  %h3 Процесс не назначен!
- if can? :update, @contract || @contract.owner_id == current_user.id # ответственный за договор тоже может добавлять процесс
  #update_bproce
    = link_to 'Добавить процесс', bproce_create_contract_path(@contract), remote: true # , class: 'button'

- @contract.contract_scan.each do |contract_scan|
  .floating-box
    - if File.exist?(contract_scan.scan.path) # есть исходный файл документа
      = link_to image_tag('ico_text.gif', alt: 'См.', title: 'Загрузить') + "#{contract_scan.name}: #{contract_scan.scan_file_name}", contract_scan.scan.url
    - else
      #{contract_scan.name} #{contract_scan.scan_file_name}

    %br
    (#{contract_scan.scan_updated_at.strftime('%d.%m.%Y %H:%M:%S')}
    #{contract_scan.scan_file_size})
- if can? :update, @contract
  .floating-box
    #update_scan
      = link_to 'Добавить файл (скан)', scan_create_contract_path(@contract), remote: true
%hr

= render 'activities/info_activity', track_type: 'Contract', track_item: @contract

%p
- if can? :update, @contract
  = link_to 'Edit', edit_contract_path(@contract), class: 'button'
= link_to 'Back', :back, class: 'button'
- if @contract.status
  - if @contract.status == 'Проект' || @contract.status == 'Согласование'
    = link_to 'Лист согласования', approval_sheet_contract_path(@contract), class: 'button' if can? :update, Contract
- if can? :update, @contract
  = link_to 'XML', contract_path(@contract, format: 'xml'), class: 'button'
  = link_to 'JSON', contract_path(@contract, format: 'json'), class: 'button'
- if can? :destroy, @contract
  = link_to 'Новый субдоговор', clone_contract_path(@contract), class: 'button'
