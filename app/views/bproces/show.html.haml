-title 'Процесс ' + @bproce.shortname
-search "Процесс"
.id_
  \#
  = @bproce.id
-if @bproce.checked_at
  .checked_
    = "взят в управление #{@bproce.checked_at.strftime('%d.%m.%Y')}"
%h2
  %b
    [#{@bproce.shortname}]
  = @bproce.name
-if @bproce.parent_id
  %h3
    Родительский процесс:
    = link_to @bproce.parent.name, bproce_path(@bproce.parent_id)
%h3 Подпроцессы:
- Bproce.where("lft>? and rgt<?", @bproce.lft, @bproce.rgt).order("lft").each do |bp|
  = "——" * (bp.depth - @bproce.depth)
  -#= bp.depth
  = "[ #{bp.shortname} ]" if bp.shortname
  = "\u2713".html_safe if bp.checked_at
  = link_to bp.name, bproce_path(bp)
  .id_show_
    = "##{bp.id}"
  = link_to bp.user.displayname, user_path(bp.user) if bp.user
  %br
%h3
  %b
    Полное наименование:
  = @bproce.fullname
%h4
  %b
    Цель:
  -if @bproce.goal.blank?
    не задана
  -else
    = markdown(@bproce.goal)
-if !@bproce.description.blank?
  %h4 Краткое описание:
  = raw markdown_and_link(@bproce.description, @bproce.business_roles)
%h3
  Владелец процесса:
  -if @bproce.user_id?
    = link_to User.find(@bproce.user_id).displayname, user_path(@bproce.user_id)
  -else
    %b
      не задан
Теги процесса:
= raw @bproce.tag_list.map { |t| link_to t, bproces_path + '/tags/' + t, class: 'tags' }.join('&nbsp; ')

%hr

-if can? :update, @bproce   # разрешить смотреть метрики только владельцу проецесса и бизнес-аналитику
  -if @metrics.count > 0
    %h4
      =link_to 'Метрики', bproce_path(@bproce) + '/metrics'
      процесса:
    -@metrics.each do | metric |
      .floating-box
        =link_to metric.name, metric

- if @bproce.business_roles.count > 0
  %h4
    В процессе участвуют
    = link_to 'Роли:', bproce_business_role_path(@bproce)
  - @bproce.business_roles.order(:name).each do |business_role|
    .floating-box
      = link_to business_role.name, business_role_path(business_role)

-if @bproce.bproce_documents.any?
  %h4
    Процесс описывают
    =link_to 'Документы:', bproce_path(@bproce) + '/documents'
  -#@bproce.documents.order(:name).for_each do |doc|
  - ids = @bproce.bproce_documents.pluck(:document_id)
  - Document.where(id: ids).order(:name).each do |doc|
    -if doc.status == 'Утвержден' or doc.status == 'Согласование'
      .floating-box
        -if doc.document_file_file_name  #  если есть файл документа, загруженный через paperclip
          -if can? :view_document, doc
            - if File.exist?(doc.pdf_path)
              = link_to image_tag('action_go.gif', alt: 'См.', title: 'Смотреть'), doc.pdf_url, class: 'button-img'
        = link_to doc.name, document_path(doc)
        %br
        .id_show_
          = "##{doc.id}"
        = doc.status
        = ' ' + doc.approved.strftime('%d.%m.%Y') if doc.approved

-if @directive_of_bproce&.any?
  %h4 Директивы, на основании которых разработаны документы процесса:
  -@directive_of_bproce.each do |directive|
    .floating-box
      = link_to directive.midname, directive_path(directive)
      = "(#{directive.note}) " unless directive.note.blank?


-if @bproce.contracts&.any?
  %h4
    Организационно-юридическое обеспечение Процесса соcтавляют:
    = link_to "Договоры (Действует #{@bproce.contracts.where(status: 'Действует').count} из #{@bproce.contracts.count})", bproce_path(@bproce) + '/contracts'

-if @bproce.workplaces&.any?
  %h4
    В процессе участвуют
    =link_to 'Рабочие Места:', bproce_workplace_path(@bproce)
  -@bproce.workplaces.order(:name).each do |wp|
    .floating-box
      = link_to wp.designation, workplace_path(wp)

- if @bproce.bproce_bapps&.any?
  %h4
    В процессе используются
    =link_to 'Приложения:', bproce_path(@bproce) + '/bapps'
  -# @bproce.bapps.order(:name).each do |ba|
  - ids = @bproce.bproce_bapps.pluck(:bapp_id)
  - Bapp.where(id: ids).order(:name).find_each do |ba|
    .floating-box
      = link_to ba.name, bapp_path(ba)
  
-if @bproce.iresource&.any?
  %h4
    В процессе используются Ресурсы:
  -@bproce.iresource.order(:label).each do |iresource|
    .floating-box
      = link_to iresource.label, iresource_path(iresource)

%p
.info_
  -activity1 = PublicActivity::Activity.where(trackable_type: "Bproce", trackable_id: @bproce.id).order("created_at asc").first
  -if activity1
    = link_to 'создал', activities_path(type: "Bproce", id: @bproce.id)
    = activity1.updated_at.strftime('%d.%m.%Y %H:%M:%S')
    = activity1.owner.displayname.to_s if activity1.owner
  -else
    создан
    = @bproce.created_at.strftime('%d.%m.%Y %H:%M:%S')
  %br
  -activity2 = PublicActivity::Activity.where(trackable_type: "Bproce", trackable_id: @bproce.id).order("created_at asc").last
  -if activity2
    = link_to 'изменил', activities_path(type: "Bproce", id: @bproce.id)
    = activity2.updated_at.strftime('%d.%m.%Y %H:%M:%S')
    = activity2.owner.displayname.to_s if activity2.owner
  -else
    изменен
    = @bproce.updated_at.strftime('%d.%m.%Y %H:%M:%S')
%p
= link_to 'Edit', edit_bproce_path(@bproce), :class => 'button' if can? :update, @bproce
= link_to 'Back', bproces_path, :class => 'button'
-if can? :update, @bproce
  = link_to 'Карточка', bproce_path(@bproce) + '/card', :class => 'button'
  = link_to 'Чек-лист', bproce_path(@bproce) + '/check_list', :class => 'button'
  = link_to 'Описание', bproce_path(@bproce) + '/doc', :class => 'button'
  -#= link_to 'Распоряжение', order_bproces(@bproce), :class => 'button'
  = link_to 'Распоряжение', bproce_path(@bproce) + '/order', class: :button
