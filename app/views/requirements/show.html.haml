-title "Требование ##{@requirement.id} от #{@requirement.date.strftime("%d.%m.%Y")}"
-search "Требование"
%section.hero.is-primary
  .hero-body
    .columns
      .column
        %h2.title
          Требование от #{@requirement.date.strftime('%d.%m.%Y')}
          статус: #{REQUIREMENT_STATUS.key(@requirement.status)}
      .column.is-1
        %h2.title
          \##{@requirement.id}
    %h2.subtitle
      [#{@requirement.label}]
      %p.notice= notice
%section
  .container
    .content
      - if @requirement
        %h3 Краткое содержание (о чем):
        = simple_format(@requirement.body, {}, {})

        -if @requirement.letter
          %h3
            Основание:
            = link_to image_tag('in_mail.png', size: "32x32") + "Исх.№#{@requirement.letter.number}", letter_path(@requirement.letter)
            от #{@requirement.letter.date.strftime('%d.%m.%Y')}
        -else
          %h3 Источник: #{@requirement.source}

        %h3
          Срок исполнения:
          -if @requirement.duedate
            %b= @requirement.duedate.strftime("%d.%m.%Y")
            -if @requirement.status < 90
              - days = @requirement.duedate - Date.current
              = " (осталось #{days.to_i} дн.)" if days > 0
              -if days <= 0
                %span{:style => "color: red;"}
                  = " (опоздание #{(-days).to_i} дн.)" if days < 0
                  = " сегодня!" if days == 0
        %h3
          -if @requirement.author_id
            Автор:
            = link_to @requirement.author.displayname, user_path(@requirement.author.id)
            &nbsp; &nbsp;
          Исполнители:
          - @requirement.user_requirement.each do |user_requirement|
            &nbsp;
            = link_to user_requirement.user.displayname, user_requirement.user
            - if user_requirement.status && user_requirement.status > 0
              \- отв.
            &nbsp;
        - if can? :update, @requirement
          #create_user
            %a.button.is-info.is-outlined.is-small{ href: create_user_requirement_path(@requirement), "data-remote" => "true" } Добавить Исполнителя

        %h3 Результат исполнения:
        = simple_format(@requirement.result, {}, {})

        =render 'tasks'
%hr
.container
  .columns
    .column
      %a.button.is-primary{ href: requirements_path } Back
      -if can? :update, @requirement
        %a.button.is-primary{ href: edit_requirement_path(@requirement) } Edit
        %a.button.is-warning{ href: create_task_requirement_path(@requirement) } +Задачу
        %a.button.is-info{ href: tasks_list_requirement_path(@requirement) } План мероприятий
        %a.button.is-info{ href: tasks_report_requirement_path(@requirement) } Отчет
    .column
      .info_
        -activity1 = PublicActivity::Activity.where(trackable_type: "Requirement", trackable_id: @requirement.id).order("created_at asc").first
        -if activity1
          = link_to 'создал', activities_path(type: "Requirement", id: @requirement.id)
          = activity1.updated_at.strftime('%d.%m.%Y %H:%M:%S')
          = activity1.owner.displayname.to_s
        -else
          создано
          = @requirement.created_at.strftime('%d.%m.%Y %H:%M:%S')
        %br
        -activity2 = PublicActivity::Activity.where(trackable_type: "Requirement", trackable_id: @requirement.id).order("created_at asc").last
        -if activity2
          = link_to 'изменил', activities_path(type: "Requirement", id: @requirement.id)
          = activity2.updated_at.strftime('%d.%m.%Y %H:%M:%S')
          = activity2.owner.displayname.to_s
        -else
          изменено
          = @requirement.updated_at.strftime('%d.%m.%Y %H:%M:%S')
