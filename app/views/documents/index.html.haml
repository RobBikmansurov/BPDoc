- search 'Документ'
- command_params = Hash.new
- if @bproce
  - title "Документы процесса ##{@bproce.id}"
  %h3
    Документы процесса
    = link_to @bproce.name, bproce_path(@bproce)
- elsif @directive
  - title "Документы директивы ##{@directive.id}"
  %h3
    Документы, разработанные на основании 
    = link_to @directive.shortname, directive_path(@directive)
- else
  - title 'Каталог Документов'
  %h2= @title_doc
  - command_params = command_params.merge('status' => params[:status]) if params[:status].present?
  - command_params = command_params.merge('search' => params[:search]) if params[:search].present?

%table
  %tr
    %th=sortable 'id', '#'
    %th= sortable 'name', 'Наименование'
    %th= sortable 'status', 'Статус'
    %th= sortable 'approved', 'От'
    %th Оригинал
    - if can? :update, Document
      %th
    - if can? :destroy, Document
      %th
    
  - @documents.each do |document|
    %tr
      %td
        .id_show_ ##{document.id}
      %td
        - if document.document_file_file_name # если есть файл документа, загруженный через paperclip
          -if can? :view_document, document
            - if File.exist?(document.pdf_path)
              = link_to image_tag('action_go.gif', alt: 'См.', title: 'Смотреть'), document.pdf_url, class: 'button-img'
        = link_to format_content(document.name), document_path(document)
        - if can? :manage_tag, document
          %sup= document.tag_list
      %td= document.status
      %td= document.approved.strftime('%d.%m.%Y') if document.approved
      %td= document.place 
      - if can? :update, document
        %td
          = link_to image_tag('page_edit.gif', alt: 'Изменить'), edit_document_path(document), class: 'button-img'
      - if can? :destroy, document
        %td
          - if !@directive
            - if !@bproce
              = link_to image_tag('action_stop.gif', alt: 'Удалить', title: 'Удалить' ), document, data: { confirm: document.name + "\nДействительно хотите удалить документ #" + document.id.to_s + " ?" }, method: 'delete', class: 'button-img'
            - else
              - bproce_document = document.bproce_document.where('bproce_id = ?', @bproce.id).first # ссылка на данный процесс из документа
              = link_to image_tag('action_stop.gif', alt: 'Удалить'),
                        bproce_document_path(bproce_document, bproce_id: @bproce.id),
                        data: { confirm: document.name + "\nДействительно хотите удалить ссылку из процесса ##{bproce_document.bproce_id} на этот документ?" },
                        method: 'delete',
                        class: 'button-img' if bproce_document
          - else # это документы Директивы, нельзя удалять сам документ - только ссылку из директивы
            - di = @directive.document_directive.where("directive_id = '?' and document_id = '?'", @directive.id, document.id).first
            = link_to image_tag('action_stop.gif', alt: 'Удалить'), di, data: { confirm: document.name + "\nДействительно хотите удалить ссылку из директивы на этот документ?" }, method: 'delete', class: 'button-img' if di

- unless params[:all].present?
  .apple_pagination
    = will_paginate @documents
%p
- if can? :create, Document
  = link_to 'Каталог', documents_path(command_params.merge(format: 'odt', all: '1')), class: 'button'
  - if @bproce
    = link_to 'Список', documents_path(format: 'odt', bproce_id: @bproce.id), class: 'button'
    = link_to 'Новый документ процесса', new_document_bproce_path(@bproce), class: 'button'
  - elsif @directive
    = link_to 'Список', documents_path(format: 'odt', directive_id: @directive.id), class: 'button'
    -# = link_to 'Новый документ директивы', new_document_directive_path(@directive), class: 'button'
  - else
    = link_to 'Список', documents_path(command_params.merge(format: 'odt')), class: 'button'
    = link_to 'Добавить новый документ', new_document_path, class: 'button'

%p
Статус:
- Document.select('status, count(id) as count').group(:status).order(:status).each do |d|
  - unless d.status.to_s.empty?
    - if params[:status].present? && d.status == params[:status]
      = link_to d.status, documents_path + '?status=' + d.status.to_s, class: 'groups-s'
    -else
      = link_to d.status, documents_path + '?status=' + d.status.to_s, class: 'groups'
    &nbsp;
%br
Уровень:
- Document.select('dlevel, count(id) as count').group(:dlevel).order(:dlevel).each do |d|
  - unless d.dlevel.to_s.empty?
    - if params[:dlevel].present? && d.dlevel.to_s == params[:dlevel]
      = link_to dlevel_title(d.dlevel), documents_path + '?dlevel=' + d.dlevel.to_s, class: 'groups-s', title: DOCUMENT_LEVEL.key(d.dlevel)
    -else
      = link_to dlevel_title(d.dlevel), documents_path + '?dlevel=' + d.dlevel.to_s, class: 'groups', title: DOCUMENT_LEVEL.key(d.dlevel)
    &nbsp;
%br
Оригинал:
- Document.select('place, count(id) as count').group(:place).order(:place).each do |d|
  - unless d.place.to_s.empty?
    - if params[:place].present? && d.place == params[:place]
      = link_to d.place, documents_path + '?place=' + d.place.to_s, class: 'groups-s', title: place_title(d.place)
    - else
      = link_to d.place, documents_path + '?place=' + d.place.to_s, class: 'groups', title: place_title(d.place)
    &nbsp;
%p
Теги:
= raw Document.all_tags.map { |t| link_to t.name, tag_documents_path(t.name), class: 'tags' }.join('&nbsp; ')
