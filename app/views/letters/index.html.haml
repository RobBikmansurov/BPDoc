- search "Письма"
- title @title_letter

%h2
  = @title_letter if @title_letter
  - if params[:search].present?
    [ #{params[:search]} ]

%table
  %tr
    %th= sortable "id", "#"
    %th= sortable 'date', "#{params[:out].present? ? 'Вх.' : 'Исх.'} № от"
    %th= sortable 'regnumber', "Рег.#{params[:out].present? ? 'Исх.' : 'Вх.'}№ от"
    %th [ Тема ]
    %th= link_to 'Корреспондент', senders_letters_path
    %th= sortable 'duedate', 'Срок'
    %th= sortable "status", "Статус"
    %th Исполнитель
    - if true or can? :manage, Letter or can? :destroy, Letter
      %th
        &nbsp;

  - @letters.each do |letter|
    %tr
      %td
        .id_show_ ##{letter.id}
      %td
        = link_to letter.number, letter
        %br
        = link_to letter.date.strftime("%d.%m.%y"), letters_path(date: letter.date.strftime("%d.%m.%Y")) if letter.date
      %td
        - if letter.regnumber.blank?
          &nbsp;
        - else
          #{letter.regnumber}
          %br
          = link_to letter.regdate.strftime("%d.%m.%y"), letters_path(regdate: letter.regdate.strftime("%d.%m.%Y")) if letter.regdate
      -# %td
        = (letter.in_out == 1 ? 'В' : 'И')
      %td
        - if letter.letter_appendix.first  # если есть приложение
          - if File.exist?(letter.letter_appendix.first.appendix.path)
            = link_to image_tag('action_go.gif', alt: 'См.', title: 'Смотреть'), letter.letter_appendix.first.appendix.url, class: 'button-img'
        = link_to truncate(letter.subject, length: 40, omission: ' ...'), letter
      %td= link_to truncate(letter.sender, length: 20, omission: ' ...'), letters_path(addresse: letter.sender)
      %td
        - if letter.duedate
          = days_left_as_text(letter.duedate, letter.status < 90 && letter.duedate <= Date.current)
          - if letter.completion_date
            - if letter.completion_date > letter.duedate
              %br
                = date_as_text letter.completion_date, true

      %td= LETTER_STATUS.key(letter.status)
      %td
        - i = 0
        - letter.user_letter.includes(:user).each do |user_letter|
          - if user_letter.user
            - s = "#{user_letter.user.user3}<span>#{user_letter.user.lastname[1,10]}</span>"
            - s += "\u2713".html_safe if user_letter.status&.positive?   # пометим ответственного
            %user
              = link_to raw(s), user_letter.user
          - else
            удалить ссылку
            = user_letter.inspect
          - i += 1
      %td
        - if true or can? :manage, Letter
          = link_to image_tag('page_edit.gif', :alt => 'Изменить'), edit_letter_path(letter), class: 'button-img'
        - if can? :destroy, Letter
          = link_to image_tag('action_stop.gif', :alt => 'Удалить'), letter,
          data: { confirm: "Письмо № #{letter.number} от #{letter.date.strftime("%d.%m.%Y")}\n #{letter.sender}" + "\nДействительно хотите удалить?" },
          :method => 'delete', class: 'button-img'

%br
.apple_pagination
  = will_paginate @letters

%p
- if params[:out].present?
  = link_to 'Входящие', letters_path, class: 'button'
- else
  = link_to 'Исходящие', letters_path(out: 2), class: 'button'
- if can? :create, Letter
  - if params[:addresse].present? # письма от адресанта + письма алресату
    = link_to 'Новое письмо в адрес', new_letter_path(addresse: params[:addresse]), class: 'button'
  - else
    = link_to 'Новое письмо', new_letter_path, class: 'button'

= link_to 'Корреспонденты', senders_letters_path, class: 'button'
- if can? :create, Letter
  - if params[:out].present?
    = link_to 'Реестр', log_week_letters_path(out: "#{params[:out]}", week_day: "#{Date.current - 7}"), class: 'button'
  - else
    = link_to 'Реестр', log_week_letters_path(week_day: "#{Date.current - 7}"), class: 'button'
= link_to 'Контроль', check_letters_path, class: 'button'

%p
- if params[:user].present?
  -# @letters.select("letters.status, count(id) as count").group('letters.status').order('letters.status').each do |d|
  - letters = Letter.joins(:user_letter).where("user_letters.user_id = ?", params[:user])
  - if letters
    - letters.select('letters.status, count(letters.id) as count').group(:status).each do |letter|
      - if !letter.status.blank?
        = link_to " #{LETTER_STATUS.key(letter.status)} (#{letter.count}) ", letters_path(status: letter.status, user: params[:user]), class: 'groups'
      &nbsp;
- else
  - if params[:out].present?
    Исходящие:
    - Letter.select("status, count(id) as count").where('in_out <> 1').group(:status).order(:status).each do |d|
      - if !d.status.to_s.empty?
        = link_to " #{LETTER_STATUS.key(d.status)} (#{d.count}) ", letters_path(status: d.status, out: 1), class: 'groups'
        &nbsp;
  - else
    Входящие:
    - Letter.select("status, count(id) as count").where('in_out = 1').group(:status).order(:status).each do |d|
      - if !d.status.to_s.empty?
        = link_to " #{LETTER_STATUS.key(d.status)} (#{d.count}) ", letters_path(status: d.status), class: 'groups'
        &nbsp;
