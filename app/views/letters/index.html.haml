- search "Письмо"
- title @title_letter

%section.hero.is-primary
  .hero-body
    .container
      %h1.title
        = @title_letter if @title_letter
        - if params[:search].present?
          [ #{params[:search]} ]
      %h2.subtitle
        %p.notice= notice

- if @letters.any?
  .container
    %table.table.is-striped.is-bordered.is-hoverable.is-fullwidth
      %thead
        %tr
          %th= sortable "id", "#"
          %th= sortable 'date', "#{params[:out].present? ? 'Вх.' : 'Исх.'} № от"
          %th= sortable 'regnumber', "Рег.#{params[:out].present? ? 'Исх.' : 'Вх.'}№ от"
          %th [ Тема ]
          %th= link_to 'Корреспондент', senders_letters_path
          %th= sortable 'duedate', 'Срок'
          %th= sortable "status", "Статус"
          %th Исполнитель
          - if true or can? :manage, Letter or can? :destroy, Letter
            %th
              &nbsp;
      %tbody
        - @letters.each do |letter|
          %tr
            %td
              .id_show_ ##{letter.id}
            %td
              = link_to letter.number, letter
              %br
              = link_to letter.date.strftime("%d.%m.%y"), letters_path(date: letter.date.strftime("%d.%m.%Y")) if letter.date
            %td
              - if letter.regnumber.blank?
                &nbsp;
              - else
                #{letter.regnumber}
                %br
                = link_to letter.regdate.strftime("%d.%m.%y"), letters_path(regdate: letter.regdate.strftime("%d.%m.%Y")) if letter.regdate
              = (letter.in_out == 1 ? 'В' : 'И')
            %td
              - if letter.letter_appendix.first  # если есть приложение
                - if File.exist?(letter.letter_appendix.first.appendix.path)
                  = link_to image_tag('action_go.gif', alt: 'См.', title: 'Смотреть'), letter.letter_appendix.first.appendix.url, class: 'button-img'
              = link_to letter.subject, letter
            %td= link_to letter.sender, letters_path(addresse: letter.sender)
            %td
              - if letter.duedate
                = days_left_as_text(letter.duedate, letter.status < 90 && letter.duedate <= Date.current)
                - if letter.completion_date
                  - if letter.completion_date > letter.duedate
                    %br
                    = date_as_text letter.completion_date, true

            %td= LETTER_STATUS.key(letter.status)
            %td
              - i = 0
              - letter.user_letter.includes(:user).each do |user_letter|
                - if user_letter.user
                  - s = "#{user_letter.user.user3}<span>#{user_letter.user.lastname[1,10]}</span>"
                  - s += "\u2713".html_safe if user_letter.status&.positive?   # пометим ответственного
                  %user
                    = link_to raw(s), user_letter.user
                - else
                  удалить ссылку
                  = user_letter.inspect
                - i += 1
            %td
              - if true or can? :manage, Letter
                = link_to image_tag('page_edit.gif', :alt => 'Изменить'), edit_letter_path(letter), class: 'button-img'
              - if can? :destroy, Letter
                = link_to image_tag('action_stop.gif', :alt => 'Удалить'), letter,
                data: { confirm: "Письмо № #{letter.number} от #{letter.date.strftime("%d.%m.%Y")}\n #{letter.sender}" + "\nДействительно хотите удалить?" },
                :method => 'delete', class: 'button-img'

  .container
    .apple_pagination
      = will_paginate @letters
      -# = render 'pagy/nav', locals: {pagy: @pagy}

.container
  .columns
    .column
      - if params[:out].present?
        %a.button.is-primary{href: letters_path} Входящие
      - else
        %a.button.is-primary{href: letters_path(out: 2)} Исходящие
      - if can? :create, Letter
        - if params[:addresse].present? # письма от адресанта + письма алресату
          %a.button.is-primary{href: new_letter_path(addresse: params[:addresse])} Новое письмо в адрес
        - else
          %a.button.is-primary{ href: new_letter_path } Новое письмо

      %a.button.is-primary{ href: senders_letters_path } Корреспонденты
      - if can? :create, Letter
        - if params[:out].present?
          %a.button.is-primary{ href: log_week_letters_path(out: "#{params[:out]}", week_day: "#{Date.current - 7}")} Реестр
        - else
          %a.button.is-primary{ href: log_week_letters_path(week_day: "#{Date.current - 7}") } Реестр
      %a.button.is-primary{ href: check_letters_path } Контроль
    .column
      - if params[:user].present?
        -# @letters.select("letters.status, count(id) as count").group('letters.status').order('letters.status').each do |d|
        - letters = Letter.joins(:user_letter).where("user_letters.user_id = ?", params[:user])
        - if letters
          #{@user&.displayname}:
          - letters.select('letters.status, count(letters.id) as count').group(:status).each do |letter|
            - if !letter.status.blank?
              %a.button.is-danger.is-outlined{ href: letters_path(status: letter.status, user: params[:user]) }  #{LETTER_STATUS.key(letter.status)} - #{letter.count}
      - else
        - if params[:out].present?
          Исходящие:
          - Letter.select("status, count(id) as count").where('in_out <> 1').group(:status).order(:status).each do |d|
            - if !d.status.to_s.empty?
              %a.button.is-info.is-outlined{ href: letters_path(status: d.status, out: 1) } #{LETTER_STATUS.key(d.status)} - #{d.count}
        - else
          Входящие:
          - Letter.select("status, count(id) as count").where('in_out = 1').group(:status).order(:status).each do |d|
            - if !d.status.to_s.empty?
              %a.button.is-info.is-outlined{ href: letters_path(status: d.status) } #{LETTER_STATUS.key(d.status)} - #{d.count}
